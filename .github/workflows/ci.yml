name: Pandora

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  lint:
    name: Lint
    runs-on: self-hosted
    timeout-minutes: 3
    steps:
      - name: Checkout Git repository
        uses: actions/checkout@v2
      - name: Install node v16
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Install yarn
        run: npm install -g yarn
      - name: Install project dependencies
        run: yarn install --frozen-lockfile
      - name: Run linters
        run: yarn lint

  build:
    name: Build
    runs-on: self-hosted
    timeout-minutes: 5
    steps:
      - name: Checkout Git repository
        uses: actions/checkout@v2
      - name: Install node v16
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Install yarn
        run: npm install -g yarn
      - name: Install project dependencies
        run: yarn install --frozen-lockfile
      - name: Build project
        run: yarn tsc

  deploy:
    name: Deploy
    runs-on: self-hosted
    needs: build
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    timeout-minutes: 2
    steps:
      - name: Checkout Git repository
        uses: actions/checkout@v2
      - name: Install node v16
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Install yarn
        run: npm install -g yarn
      - name: Install project dependencies
        run: yarn install --frozen-lockfile
      - name: Build project
        run: yarn tsc
      - name: deploy
        run: yarn publish
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

  bump-version:
    name: Bump Version
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - name: Checkout Git repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: cat package.json
        run: cat ./package.json
      - name: Automated Version Bump
        id: version-bump
        uses: phips28/gh-action-bump-version@master
        with:
          tag-prefix: 'v'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: cat package.json
        run: cat ./package.json
      - name: Output Step
        env:
          NEW_TAG: ${{ steps.version-bump.outputs.newTag }}
        run: echo "new tag $NEW_TAG"