name: Laguna Manual

on:
  workflow_dispatch:
    inputs:
      project_name:
        type: choice
        description: Select a `Project` to run
        required: true
        options:
          - hepius
          - iris
      run_test:
        type: boolean
        description: enable `Test`?
        required: false
        default: true
      run_lint:
        type: boolean
        description: enable `Lint`?
        required: false
        default: true
      run_deploy:
        type: boolean
        description: enable `Deploy`? (only applied when `Test` and `Lint` are selected)?
        required: false
        default: false
      run_migrate:
        type: boolean
        description: enable `Migrate`?
        required: false
        default: false

jobs:
  lint:
    name: Lint
    runs-on: self-hosted
    if: github.event.inputs.run_lint == 'true'
    steps:
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5
      - name: Checkout Git repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ steps.branch-name.outputs.current_branch }}
      - name: Install node v16
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Install packages
        run: yarn install
      - name: Lint
        run: npx nx lint ${{github.event.inputs.project_name}}

  test:
    name: Test
    runs-on: self-hosted
    if: github.event.inputs.run_test == 'true'
    steps:
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5
      - name: Checkout Git repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ steps.branch-name.outputs.current_branch }}
      - name: Install node v16
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Install packages
        run: yarn install
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Start docker image with mongodb to localhost and test db
        run: |
          docker-compose -f docker-compose.yml up -d
          sleep 10
      - name: Configure localstack
        run: npx nx localstack
      - name: Test
        run: npx nx test:cov ${{github.event.inputs.project_name}}

  deploy:
    name: Deploy
    runs-on: self-hosted
    needs: [test, lint]
    timeout-minutes: 25
    if: github.event.inputs.run_deploy == 'true' && github.event.inputs.project_name != 'pandora' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/master')
    steps:
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5
      - name: Checkout Git repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ steps.branch-name.outputs.current_branch }}
      - name: Install node v16
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Install packages
        run: yarn install
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Build
        run: npx nx build ${{github.event.inputs.project_name}}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Deploy
        run: npx nx deploy ${{github.event.inputs.project_name}} --slackChannel=${{secrets.SLACK_URL_MESSAGES}}
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          CURRENT_BRANCH: ${{ steps.branch-name.outputs.current_branch }}

  migrate:
    name: Migrate
    runs-on: self-hosted
    timeout-minutes: 5
    if: github.event.inputs.run_migrate == 'true' && github.event.inputs.project_name == 'hepius' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/master')
    steps:
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5
      - name: Checkout Git repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ steps.branch-name.outputs.current_branch }}
      - name: Install node v16
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Install packages
        run: yarn install
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Accumulate NODE_ENV
        id: branch_check
        run: |
          if [ "${{ steps.branch-name.outputs.current_branch }}" = "master"]; then
            echo "::set-output name=env_name::production"
          elif [ "${{ steps.branch-name.outputs.current_branch }}" = "staging" ]; then
            echo "::set-output name=env_name::staging"
          elif [ "${{ steps.branch-name.outputs.current_branch }}" = "develop" ]; then
            echo "::set-output name=env_name::develop"
          fi
      - name: Migrate Db
        env:
          NODE_ENV: ${{ steps.branch_check.outputs.env_name }}
        run: npx nx command hepius --cmd=migration --options=up
